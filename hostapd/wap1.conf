########################## hostapd configuration file #########################
# /etc/hostapd/hostapd.conf

#------------------------------------------------------------------------------
# Access Point ID to be used in IEEE 802.11 management frames
interface=wap1
# bridge=lbr1

#------------------------------------------------------------------------------
# Interface for separate control program. If this is specified, hostapd
# will create this directory and a UNIX domain socket for listening to 
# requests from external programs (CLI/GUI, etc.) for status information
# and configuration. 
ctrl_interface=/var/run/hostapd

#------------------------------------------------------------------------------
# Send empty SSID in beacons and ignore probe request frames that do not
# specify full SSID, i.e., require stations to know SSID.
# 0 = disabled (default)
# 1 = send empty (length=0) SSID in beacon and ignore probe request for
#     broadcast SSID
# 2 = clear SSID (ASCII 0), but keep the original length (this may be required
#     with some clients that do not support empty SSID) and ignore probe
#     requests for broadcast SSID
ignore_broadcast_ssid=0

#------------------------------------------------------------------------------
# Driver interface type (hostap/wired/none/nl80211/bsd);
# default: hostap). nl80211 is used with all Linux mac80211 drivers.
# Use driver=none if building hostapd as a standalone RADIUS server that does
# not control any wireless/wired driver.
driver=nl80211

#------------------------------------------------------------------------------
# Country code (ISO/IEC 3166-1). Used to set regulatory domain.
country_code=US

#------------------------------------------------------------------------------
# ieee80211d: WLAN amendment that specifies extensions which adds support for
# "additional regulatory domains" and defines the physical layer requirements
# Channelization, Hopping patterns, and New values for current MIB attributes.
# 0 = disabled (default)
# 1 = enabled
ieee80211d=1

#------------------------------------------------------------------------------
# ieee80211h: WLAN amendment that specifies extensions which enforces dynamic
# frequency selection (DFS) and transmit power control (TPC) mechanisms to meet
# European regulations
# 0 = disabled
# 1 = enabled (default)
#ieee80211h=0

#------------------------------------------------------------------------------
# ieee80211n: Whether IEEE 802.11n (HT) is enabled
# 0 = disabled (default)
# 1 = enabled
# Note: You will also need to enable WMM for full HT functionality.
# Note: hw_mode=g (2.4 GHz) and hw_mode=a (5 GHz) is used to specify the band.
ieee80211n=1
# mt7612u - mt7610u
# ht_capab=[HT40+][HT40-][GF][SHORT-GI-20][SHORT-GI-40]
#
# rtl8812au - rtl8811au - rtl8811cu
ht_capab=[LDPC][HT40+][HT40-][SHORT-GI-20][SHORT-GI-40][MAX-AMSDU-3839]
# ht_capab=[LDPC][HT40-][HT40+][GF][SHORT-GI-20][SHORT-GI-40][TX-STBC][RX-STBC1][MAX-AMSDU-3839][40-INTOLERANT][DSSS_CCK-40]

#------------------------------------------------------------------------------
# ieee80211ac: Whether IEEE 802.11ac (VHT) is enabled
# 0 = disabled (default)
# 1 = enabled
# Note: You will also need to enable WMM for full VHT functionality.
# Note: hw_mode=a is used to specify that 5 GHz band is used with VHT.
ieee80211ac=1
# mt7612u
vht_capab=[RXLDPC][SHORT-GI-80][TX-STBC-2BY1][RX-STBC-1][RX-ANTENNA-PATTERN][TX-ANTENNA-PATTERN][MAX-A-MPDU-LEN-EXP3][MAX-MPDU-3895]

#------------------------------------------------------------------------------
# 0 = 20 or 40 MHz operating Channel width
# 1 = 80 MHz channel width
# 2 = 160 MHz channel width
# 3 = 80+80 MHz channel width
vht_oper_chwidth=0

#------------------------------------------------------------------------------
# center freq = 5 GHz + (5 * index)
# So index 42 gives center freq 5.210 GHz
# which is channel 42 in 5G band
#vht_oper_centr_freq_seg0_idx=42

#------------------------------------------------------------------------------
# Default WMM parameters (IEEE 802.11 draft; 11-03-0504-03-000e):
# for 802.11a or 802.11g networks
# These parameters are sent to WMM clients when they associate.
# The parameters will be used by WMM clients for frames transmitted to the
# access point.
#
# note - txop_limit is in units of 32microseconds
# note - acm is admission control mandatory flag. 0 = admission control not
# required, 1 = mandatory
# note - Here cwMin and cmMax are in exponent form. The actual cw value used
# will be (2^n)-1 where n is the value given here. The allowed range for these
# wmm_ac_??_{cwmin,cwmax} is 0..15 with cwmax >= cwmin.
wmm_enabled=1

#------------------------------------------------------------------------------
# Channel number (IEEE 802.11)
# (default: 0, i.e., not set)
# Please note that some drivers do not use this value from hostapd and the
# channel will need to be configured separately with iwconfig.
#
# If CONFIG_ACS build option is enabled, the channel can be selected
# automatically at run time by setting channel=acs_survey or channel=0, both of
# which will enable the ACS survey based algorithm.
#channel=36

#------------------------------------------------------------------------------
# IEEE 802.11 specifies two authentication algorithms. hostapd can be
# configured to allow both of these or only one. Open system authentication
# should be used with IEEE 802.1X.
# 0 = Open System Authentication
# 1 = Shared Key Authentication
auth_algs=1

#------------------------------------------------------------------------------
# Enable WPA. Setting this variable configures the AP to require WPA (either
# WPA-PSK or WPA-RADIUS/EAP based on other configuration). For WPA-PSK, either
# wpa_psk or wpa_passphrase must be set and wpa_key_mgmt must include WPA-PSK.
# Instead of wpa_psk / wpa_passphrase, wpa_psk_radius might suffice.
# For WPA-RADIUS/EAP, ieee8021x must be set (but without dynamic WEP keys),
# RADIUS authentication server must be configured, and WPA-EAP must be included
# in wpa_key_mgmt.
# This field is a bit field that can be used to enable WPA (IEEE 802.11i/D3.0)
# and/or WPA2 (full IEEE 802.11i/RSN):
# 1: bit0 = WPA
# 2: bit1 = IEEE 802.11i/RSN (WPA2/WPA3) (dot11RSNAEnabled)
# Note that WPA3 is also configured with bit1 since it uses RSN just like WPA2.
wpa=2

#------------------------------------------------------------------------------
# WPA pre-shared keys for WPA-PSK. This can be either entered as a 256-bit
# secret in hex format (64 hex digits), wpa_psk, or as an ASCII passphrase
# (8..63 characters) that will be converted to PSK. This conversion uses SSID
# so the PSK changes when ASCII passphrase is used and the SSID is changed.
# wpa_psk (dot11RSNAConfigPSKValue)
# wpa_passphrase (dot11RSNAConfigPSKPassPhrase): secret passphrase
wpa_group_rekey=1800

#------------------------------------------------------------------------------
# Optionally, WPA passphrase can be received from RADIUS authentication server
# This requires macaddr_acl to be set to 2 (RADIUS)
# 0 = disabled (default)
# 1 = optional; use default passphrase/psk if RADIUS server does not include
#	Tunnel-Password
# 2 = required; reject authentication if RADIUS server does not include
#	Tunnel-Password
#wpa_psk_radius=0

#------------------------------------------------------------------------------
# Pairwise cipher for WPA (v1) (default: TKIP)
# wpa_pairwise=TKIP CCMP
# Pairwise cipher for RSN/WPA2 (default: use wpa_pairwise value)
wpa_pairwise=CCMP
rsn_pairwise=CCMP

#------------------------------------------------------------------------------
# DTIM (delivery traffic information message) period (range 1..255):
# number of beacons between DTIMs (1 = every beacon includes DTIM element)
# (default: 2)
dtim_period=2

#------------------------------------------------------------------------------
# ieee80211w: Whether management frame protection (MFP) is enabled
# The Management Frame Protection increases the security by providing data
# confidentiality of management frames. Management Frame Protection uses 802.11i
# framework that establishes encryption keys between the client and Instant AP.
# 0 = disabled (default)
# 1 = optional
# 2 = required
ieee80211w=2

#------------------------------------------------------------------------------
# Enabled SAE finite cyclic groups
# SAE implementation are required to support group 19 (ECC group defined over a
# 256-bit prime order field). All groups that are supported by the
# implementation are enabled by default. This configuration parameter can be
# used to specify a limited set of allowed groups. The group values are listed
# in the IANA registry:
# http://www.iana.org/assignments/ipsec-registry/ipsec-registry.xml#ipsec-registry-9
# If parameter is not set, 19 is the default value.
sae_groups=19 20 21 25 26

#------------------------------------------------------------------------------
# Require MFP for all associations using SAE
# This parameter can be used to enforce negotiation of MFP for all associations
# that negotiate use of SAE. This is used in cases where SAE-capable devices are
# known to be MFP-capable and the BSS is configured with optional MFP
# (ieee80211w=1) for legacy support. The non-SAE stations can connect without
# MFP while SAE stations are required to negotiate MFP if sae_require_mfp=1.
sae_require_mfp=1

# SAE threshold for anti-clogging mechanism (dot11RSNASAEAntiCloggingThreshold)
# This parameter defines how many open SAE instances can be in progress at the
# same time before the anti-clogging mechanism is taken into use.
# If parameter is not set, 5 is the default value.
# sae_anti_clogging_threshold=5

#------------------------------------------------------------------------------
# Beacon interval in kus (1.024 ms) (default: 100; range 15..65535)
beacon_int=100

#------------------------------------------------------------------------------
# RTS/CTS threshold; -1 = disabled (default); range -1..65535
# If this field is not included in hostapd.conf, hostapd will not control
# RTS threshold and 'iwconfig wlan# rts <val>' can be used to set it.
rts_threshold=-1

#------------------------------------------------------------------------------
# Fragmentation threshold; -1 = disabled (default); range -1, 256..2346. If
# If this field is not included in hostapd.conf, hostapd will not control
# fragmentation threshold and 'iwconfig wlan# frag <val>' can be used to 
# set it.
fragm_threshold=-1

#------------------------------------------------------------------------------
# Station MAC address -based authentication
# Can be used with driver=hostap or nl80211, but not with driver=atheros.
# 0 = accept unless in deny list
# 1 = deny unless in accept list
# 2 = use external RADIUS server (accept/deny lists are searched first)
macaddr_acl=0

#------------------------------------------------------------------------------
# Levels (minimum value for logged events):
#  0 = verbose debugging
#  1 = debugging
#  2 = informational messages
#  3 = notification
#  4 = warning
#
logger_syslog=-1
logger_syslog_level=2
logger_stdout=-1
logger_stdout_level=2

#------------------------------------------------------------------------------
# Operation mode:
#   a = IEEE 802.11a (5 GHz)
#   b = IEEE 802.11b (2.4 GHz)
#   g = IEEE 802.11g (2.4 GHz)
#  ad = IEEE 802.11ad (60 GHz)
# Note that a/g options are used with IEEE 802.11n (HT) to specify band). 
# For IEEE 802.11ac (VHT), this needs to be set to hw_mode=a. 
# When using ACS (see channel parameter), a special value "any" can be used 
# to indicate that any support band can be used.
# This special case is currently supported only with drivers with which|
# offloaded ACS is used. Default: IEEE 802.11b
hw_mode=g
# For WPA3, wpa_key_mgmt is set to SAE instead of WPA-PSK for WPA2
wpa_key_mgmt=WPA-PSK
# Access Point
ssid=
wpa_passphrase=
